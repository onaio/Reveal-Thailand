---
ansible_user: mhealth

# server monitoring configs
server_monitoring_set_hostname: true
server_monitoring_hostname_from_ec2_Name_tag: true
server_monitoring_server_type: "production"

# Slack
slack_deployed_app_name: "Superset"
slack_deployed_app_version: "{{ superset_version }}"
slack_deployed_domain: "{{ superset_server_name }}"

# collectd
collectd_version: "5.*"

# Monit
monit_version: "1:5.*"

# Certbot
superset_use_certbot: false
superset_certbot_create_certs: false

# Redis
redis_backup_enabled: false

# Superset
superset_python_executable: "python3.6"
superset_enable_cache: true
superset_cache_default_timeout: 60 * 1 # 1 minute(s)
superset_cache_config: |
  {
    'CACHE_TYPE': 'redis',
    'CACHE_DEFAULT_TIMEOUT': {{ superset_cache_default_timeout }}, # The default timeout that is used if no timeout is specified. Unit of time is seconds.
    'CACHE_KEY_PREFIX': 'superset_results',
    'CACHE_REDIS_URL': 'redis://127.0.0.1:6379/2'
  }

superset_install_from_git: false
superset_perform_restart: false
superset_port: 8888
superset_discover_server_name: "{{ superset_server_name }}"
superset_uri: "http://localhost:{{ superset_port }}"
superset_pass: "{{ vault_superset_pass }}"
superset_enable_javascript_controls: true
superset_enable_cors: true
superset_cors_options: |
  {
    "origins": "*",
    "methods": "GET",
    "allow_headers": "Custom-Api-Token",
    "supports_credentials": True
  }
superset_enable_proxy_fix: true
superset_secret_key: "{{ vault_superset_secret_key }}"
superset_mapbox_api_key: "{{ vault_superset_mapbox_api_key }}"
superset_wtf_csrf_enabled: true
superset_wtf_csrf_time_limit: None
superset_auth_type: AUTH_OAUTH
PATCHUP_EMAIL_BASE: noreply@ona.io
superset_oauth_providers:
  - name: opensrp
    icon: fa-sign-in
    token_key: access_token
    client_id: "'{{ superset_consumer_key }}'"
    client_secret: "'{{ vault_superset_opensrp_secret }}'"
    api_base_url: "{{ opensrp_server_url }}/opensrp/"
    access_token_url: "{{ keycloak_url }}/auth/realms/{{ keycloak_realm }}/protocol/openid-connect/token"
    authorize_url: "{{ keycloak_url}}/auth/realms/{{ keycloak_realm }}/protocol/openid-connect/auth"
    client_kwargs: |
      {
        'scope': 'read'
      }
    # we need to Base64 encode <consumer_key>:<consumer_secret> and send them as headers
    access_token_headers: |
      {
        'Authorization': 'Basic {{ vault_superset_oauth_basic_authorization }}'
      }
  - name: opensrp-preview
    icon: fa-eercast
    token_key: access_token
    consumer_key: "'{{ preview_superset_consumer_key }}'"
    consumer_secret: "'{{ vault_preview_superset_opensrp_secret }}'"
    base_url: "{{ preview_opensrp_server_url }}/opensrp/"
    access_token_url: "{{ preview_keycloak_url }}/auth/realms/{{ preview_keycloak_realm }}/protocol/openid-connect/token"
    authorize_url: "{{ preview_keycloak_url}}/auth/realms/{{ preview_keycloak_realm }}/protocol/openid-connect/auth"
    request_token_params: |
      {
        'scope': 'read'
      }
    # we need to Base64 encode <consumer_key>:<consumer_secret> and send them as headers
    access_token_headers: |
      {
        'Authorization': 'Basic {{ vault_preview_superset_secret_key }}'
      }
superset_languages:
  - key: en
    flag: us
    name: English
  - key: it
    flag: it
    name: Italian
  - key: fr
    flag: fr
    name: French
  - key: zh
    flag: cn
    name: Chinese
  - key: ja
    flag: jp
    name: Japanese
  - key: de
    flag: de
    name: German
  - key: ru
    flag: ru
    name: Russian
  - key: pt_BR
    flag: br
    name: Brazilian Portuguese
superset_white_label: false
superset_white_label_use_base64: false
superset_white_label_use_filepaths: false
superset_dashboard_position_data_limit: 16777216
superset_wsgi_buffer_size: "20480"
superset_wsgi_enable_threads: true
superset_wsgi_memory_report: true
superset_wsgi_thunder_lock: true
superset_additional_pip_packages:
  - werkzeug==0.16.1
  - sentry-sdk[flask]==0.10.2
  - future==0.18.2
superset_install_additional_pip_packages: true
superset_use_ketchup: true
superset_ketchup_version: v0.2.1
superset_auth_user_registration: true
superset_load_examples: false
superset_sentry_dsn: "{{ vault_sentry_dsn }}"
superset_add_custom_roles: true
superset_custom_roles: |
  {
    'Reveal Web Ui Reporting Access': {'all_datasource_access'},
  }
superset_auth_user_registration_role: 'Reveal Web Ui Reporting Access'

# Postgres
superset_postgres_login_password: "{{ vault_superset_postgres_login_password }}"
superset_postgres_db_pass: "{{ vault_superset_postgres_db_pass }}"
superset_public_role_like_gamma: true
superset_local_build_npm_dir: "{{ lookup('env', 'NVM_BIN') }}"
superset_postgres_login: false

# NGINX server variables
nginx_version: "1.18.*"
nginx_access_logs:
  - name: "timed_combined"
    format: '''$http_x_forwarded_for - $remote_user [$time_local]  "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_response_time $gzip_ratio $request_length'''
    options: null
    filename: "access.log"
nginx_install_method: package
nginx_ssl_dir: "{{ nginx_dir }}/ssl/{{ site.server.server_name }}"
nginx_sites:
  - server:
      name: "{{ superset_discover_server_name }}.conf"
      __listen: "80;\n  listen [::]:80;\n"
      server_name: "{{ superset_discover_server_name }}"
      return: "301 https://$server_name$request_uri"
      ssl:
        enabled: false
  - server:
      name: "{{ superset_discover_server_name }}-https.conf"
      __listen: "443 ssl;\n  listen [::]:443 ssl;\n"
      server_name: "{{ superset_discover_server_name }}"
      access_log: "/var/log/nginx/{{ superset_discover_server_name }}-access.log timed_combined"
      error_log: "/var/log/nginx/{{ superset_discover_server_name }}-error.log"
      large_client_header_buffers: 4 16k
      location1:
        name: "/static/assets"
        alias: "{{ superset_virtualenv_path }}/lib/{{ superset_python_executable }}/site-packages/superset/static/assets"
      location2:
        name: "/static/appbuilder"
        alias: "{{ superset_virtualenv_path }}/lib/{{ superset_python_executable }}/site-packages/flask_appbuilder/static/appbuilder"
      location3:
        name: /
        uwsgi_pass: "unix://{{ superset_wsgi_socket }}"
        include: "uwsgi_params"
        proxy_read_timeout: "300s"
        uwsgi_read_timeout: "300s"
        proxy_redirect: "off"
        proxy_set_header:
          - Host $host
          - X-Real-IP $remote_addr
          - X-Forwarded-For $proxy_add_x_forwarded_for
          - X-Forwarded-Host $server_name
          - X-Forwarded-Proto https
          - X-ProxyScheme https
          - X-ProxyHost $host
          - X-ProxyPort 443
          - X-ProxyContextPath /
        proxy_next_upstream: "error timeout invalid_header http_500 http_502 http_503 http_504"
        uwsgi_buffering: "on"
        uwsgi_buffers: "8 8k"
        uwsgi_buffer_size: "8k"
        uwsgi_busy_buffers_size: "16k"
      ssl:
        add_ssl_directive: false
        access_log_format: "timed_combined"
        enabled: true
        cert: "star.moph.go.th.crt"
        key: "star.moph.go.th.key"
        src_dir: "{{ reveal_ssl_dir }}"
        conf: "{{ superset_server_name }}-ssl.conf"
        remote_src: false
        create_symlink: false
nginx_enabled_sites:
  - "{{ superset_discover_server_name }}.conf"
  - "{{ superset_discover_server_name }}-https.conf"
